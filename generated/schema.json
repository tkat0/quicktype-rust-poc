{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Record",
  "type": "object",
  "required": [
    "id",
    "kind_a",
    "kind_b",
    "kind_c"
  ],
  "properties": {
    "data": {
      "anyOf": [
        {
          "$ref": "#/definitions/Data"
        },
        {
          "type": "null"
        }
      ]
    },
    "id": {
      "type": "string"
    },
    "kind_a": {
      "$ref": "#/definitions/KindA"
    },
    "kind_b": {
      "$ref": "#/definitions/KindB"
    },
    "kind_c": {
      "$ref": "#/definitions/KindC"
    }
  },
  "definitions": {
    "Data": {
      "type": "object",
      "required": [
        "raw_data"
      ],
      "properties": {
        "raw_data": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "KindA": {
      "description": "See [Enum representations Â· Serde](https://serde.rs/enum-representations.html) for details.",
      "anyOf": [
        {
          "type": "string",
          "enum": [
            "B",
            "D"
          ]
        },
        {
          "type": "object",
          "required": [
            "A"
          ],
          "properties": {
            "A": {
              "type": "object",
              "required": [
                "description",
                "value"
              ],
              "properties": {
                "description": {
                  "type": "string"
                },
                "value": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "C"
          ],
          "properties": {
            "C": {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "KindB": {
      "description": "If `#[serde(tag = \"type\")]` is set, all variants is merged as optional property.\n\n```python @dataclass class Kind: type: TypeEnum description: Optional[str] = None value: Optional[int] = None id: Optional[str] = None ```\n\n```go type Kind struct { Description *string `json:\"description,omitempty\"` Type        Type    `json:\"type\"` Value       *int64  `json:\"value,omitempty\"` ID          *string `json:\"id,omitempty\"` } ```\n\n```swift struct Kind: Codable { let kindDescription: String? let type: TypeEnum let value: Int? let id: String? ```",
      "anyOf": [
        {
          "type": "object",
          "required": [
            "description",
            "type",
            "value"
          ],
          "properties": {
            "description": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "A"
              ]
            },
            "value": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "B"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "id",
            "type"
          ],
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "enum": [
                "C"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "D"
              ]
            }
          }
        }
      ]
    },
    "KindC": {
      "anyOf": [
        {
          "type": "object",
          "required": [
            "content",
            "type"
          ],
          "properties": {
            "content": {
              "type": "object",
              "required": [
                "description",
                "value"
              ],
              "properties": {
                "description": {
                  "type": "string"
                },
                "value": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "type": {
              "type": "string",
              "enum": [
                "A"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "B"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "content",
            "type"
          ],
          "properties": {
            "content": {
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            },
            "type": {
              "type": "string",
              "enum": [
                "C"
              ]
            }
          }
        },
        {
          "type": "object",
          "required": [
            "type"
          ],
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "D"
              ]
            }
          }
        }
      ]
    }
  }
}